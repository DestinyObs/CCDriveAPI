# TheDrive Helm Chart Values
# This file contains all configurable values for the TheDrive application deployment
# Users can customize these values during helm install/upgrade operations
#
# Usage examples:
#   helm install thedrive ./helm/thedrive -n thedrive --create-namespace
#   helm upgrade thedrive ./helm/thedrive -n thedrive --set api.replicaCount=3
#   helm install thedrive ./helm/thedrive -f custom-values.yaml

# =============================================================================
# DATABASE CONFIGURATION (SQL Server 2022 Express)
# =============================================================================
database:
  # Docker image for SQL Server
  # Using Microsoft's official SQL Server 2022 Express image
  # Express edition is free but has limitations (10GB database size, 1GB RAM)
  image: mcr.microsoft.com/mssql/server:2022-latest
  
  # Resource allocation for database container
  # These values should be adjusted based on your workload and cluster capacity
  resources:
    requests:
      memory: "2Gi"    # Minimum memory SQL Server needs to start
      cpu: "500m"      # Minimum CPU allocation (0.5 cores)
    limits:
      memory: "4Gi"    # Maximum memory SQL Server can use
      cpu: "1000m"     # Maximum CPU allocation (1 core)
  
  # Persistent storage configuration
  # Database files need persistent storage to survive pod restarts
  storage:
    size: "10Gi"          # Storage size for database files
    storageClass: ""      # Use cluster's default storage class (usually local-path in K3s)
  
  # Database authentication configuration
  # SECURITY NOTE: Actual password is in secrets.yaml (not committed to Git)
  # Deploy with: helm install -f values.yaml -f secrets.yaml
  auth:
    database: "TheDriveAPI"           # Target database name for Entity Framework
    username: "sa"                    # Database username (SA for SQL Server)
    # saPassword: PROVIDED IN secrets.yaml - not included in version control

# =============================================================================
# API APPLICATION CONFIGURATION
# =============================================================================
api:
  # Docker image for the TheDrive API application
  # This should point to your built application image
  image: destinyobs/thedrive-upload-api:latest
  
  # Number of API pod replicas for high availability and load distribution
  # Increase for production workloads, decrease for resource-constrained environments
  replicaCount: 2
  
  # Resource allocation for API containers
  # Based on .NET Core application requirements and performance testing
  resources:
    requests:
      memory: "256Mi"   # Minimum memory for .NET Core app startup
      cpu: "100m"       # Minimum CPU allocation (0.1 cores)
    limits:
      memory: "512Mi"   # Maximum memory (prevents OOM kills)
      cpu: "250m"       # Maximum CPU allocation (0.25 cores)

  # Service configuration for API external access
  # NodePort exposes the API on a high-numbered port on all cluster nodes
  service:
    type: NodePort      # Service type (NodePort for external access without LoadBalancer)
    port: 80           # Internal cluster port for service-to-service communication
    targetPort: 5256   # Port the API container listens on
    nodePort: 30256    # External port for accessing API from outside cluster
  
  # Application environment configuration
  # These values configure various aspects of the API application behavior
  env:
    # Database configuration
    dbName: "TheDriveAPI"                    # Target database name for Entity Framework
    
    # JWT (JSON Web Token) authentication configuration
    jwtIssuer: "TheDriveAPI"                 # Token issuer identifier
    jwtAudience: "TheDriveAPI"               # Token audience identifier  
    jwtExpirationHours: "24"                # Token lifetime in hours
    
    # SendGrid email service configuration
    sendgridFromEmail: "noreply@thedrive.com"    # Sender email address for system emails
    sendgridFromName: "TheDrive"                 # Display name for sender
    
    # AWS S3 object storage configuration
    s3Endpoint: "https://s3.amazonaws.com"       # S3 service endpoint URL
    s3AccessKey: "AKIA5DLF5MRJSF24BDFP"        # S3 access key ID (public identifier)
    s3Bucket: "thedrive-files"                   # S3 bucket name for file storage
    s3Region: "us-east-1"                        # AWS region for S3 bucket
    
    # ASP.NET Core application configuration
    aspnetcoreEnvironment: "Production"          # Runtime environment (Development/Production)
    allowedHosts: "*"                           # Security: allowed host headers (* allows all)

# =============================================================================
# ADVANCED CONFIGURATION (Optional)
# =============================================================================

# =============================================================================
# EXTERNAL SECRET MANAGEMENT
# =============================================================================
# For GitOps security, secrets are managed externally and NOT stored in Git
# 
# Secret Management Options:
# 1. Manual creation: kubectl create secret generic thedrive-secrets --from-literal=...
# 2. External Secrets Operator: Integrates with Vault, AWS Secrets Manager, etc.
# 3. Sealed Secrets: Encrypt secrets that can be safely stored in Git
# 4. ArgoCD secret management: Store secrets in ArgoCD directly
#
# Current approach: Manual secret creation for simplicity and security

# =============================================================================
# EXTERNAL SECRET MANAGEMENT
# =============================================================================
# For GitOps security, all sensitive data is managed externally
# 
# Required Kubernetes Secret: {release-name}-secrets
# Expected secret keys:
#   - sa-password: SQL Server SA password (base64 encoded)
#   - connection-string: Complete database connection string (base64 encoded)  
#   - jwt-secret: JWT signing secret (base64 encoded)
#   - sendgrid-api-key: SendGrid API key (base64 encoded)
#   - s3-secret-key: AWS S3 secret access key (base64 encoded)
#
# Create manually: kubectl create secret generic thedrive-secrets --from-literal=...
# Or use external secret management tools (Vault, AWS Secrets Manager, etc.)

# Ingress configuration for advanced load balancing and SSL termination
# Currently disabled - using NodePort for simplicity
# Enable this when you need:
# - Custom domains (e.g., api.yourdomain.com)
# - SSL/TLS termination
# - Advanced routing rules
ingress:
  enabled: false                    # Set to true to enable Ingress
  className: ""                     # Ingress class (nginx, traefik, etc.)
  annotations: {}                   # Additional ingress annotations
  hosts:
    - host: api.thedrive.local      # Your domain name
      paths:
        - path: /
          pathType: Prefix
  tls: []                          # TLS/SSL configuration
